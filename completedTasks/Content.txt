01: Установка Angular. создание компонентов. вложенные компоненты (description in main.ts) 
02_03: Lesson_2: События, привязки классов и стилей. (description in аpp.сomponent.ts)
		Динамическая подстановка классов и стилей в html шаблон. @ViewChild - получение ссылки на html эл-т в ts сомпоненте
		настройка tsconfig.json (разрешение неинициализированных полей класса, компилятор "Ivy" - игнорирование ненужного кода)
	Lesson_3: Работа с enum (вывод значения) 
		Модули (разбиение компонентов на модули, логика подключения модулей)
		Директивы (атрибутивные)
		Подробная работа с @ViewChild (получение ссылки на элемент с html разметки)
		Директива ngif (описано в person.component.ts, в самом низу)
	Практика: todo-list (удаление и завершение задач, использование модулей, директив) 
		в todo.component.ts метод (геттер) добавления одного месяца к текощей дате. Работа с enum. 
04: Формы. Field validation (required, length, rexExp, email), отображение даты в нужном формате (пайпы).
	Практика: Создание и редактирование контакта для телефонной книги
05: Формы продолжение. Подписка на изменения текста в инпуте и на состояние (валидный или нет). 
			Кастомные валидаторы. Создание форм с помощью FormBuilder
		Практика: кастомный валидатор диапазона дат и запрещенных для ввода инпут слов. 
			Поиск страны из массива стран (в инпут вписываем название страны и обобращаются страны по совпадению)
06. Services. Install bootstrap with npm (описание в main.ts). 
	Более удобная и понятная логика валидации вместо использования кастомного валидатора как в прошлой работе
	Использование Services (описание в src\app\auth\AuthService)
	Практика: переделать предыдущее задание на работу через сервисы
07: Жизненный цикл компонента. Хуки
08: Маршрутизация. создаем проект: ng new PhotoGallery --routing (с готовым модулем маршрутизации)
	How to do rating with stars
	Маршрутизация из шаблона (по клику на ссылку), 
	Маршрутизация из компонента (файла .ts) - переход куда-то после выполнения какого-то действия
09: Дочерние маршруты. События маршрутизации (в app.component.ts). 
	Guards - предотвратить преход по маршруту по условию (в src\app\shared\guards) - для проверки авторизован ли пользователь
	Структура dashboard и доступ к нему через Guard
	Асинхронная загрузка модулей (на примере dashboard) начало описания в app-routing.module.ts
	Practice: add nested routing for previous homework 
10: Автогенерация компонентов с терминала. HttpClient. (описание src/main.ts) 
	get, post queries to JsonplaceholderApi
	Practice: create API (Asp.net core), use data from this api for previous homework
11: RxJS. Event loop (подробное описание работы) (описание src/main.ts)
	Модифицируем живой поиск, что бы событие valueChanges срабатывало не после ввода каждого символа а с определенной задержкой (src/app/app.component.ts)
	Обработака клика по document с помощью RxJS (src/app/app.component.ts)
12: Http Interceptors. лоадер через интерсепторы. 
	Практика: внедрить аутентификацию в предыдущее задание
	Итого практика: Фотогалерея - взаимодействие апи с клиентом (на минималках)
13: Teacher exampl: Фотогалерея - взаимодействие апи с клиентом (с шифрованием пароля, авторизацией и всеми дополнительными сервисами, описание начинаем смотреть со startup in api) только проект без базы данных. базу всять с практики в предыдущем задании. а так же примеры апи смотри в разделе asp.net урок 13 и 18
	подключение material design angular (client main.ts)
14: Lesson:  стратегия OnPush
	Client: описание: src/app/main/gallery/photo/photo-edit/photo-edit.component.ts
	Practice: weatherForecast
15: Описание структуры с маршрутизацией (в ng-blog -> main.ts)
	exam: приложение для просмотра рецептов с api
